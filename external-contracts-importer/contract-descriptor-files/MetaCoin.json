{"contract": {"name": "MetaCoin", "author": "Author Here", "version": "1.0", "language": "Solidity", "contract_type": "generic_contract", "abi": [{"constant": false, "inputs": [{"name": "addr", "type": "address"}], "name": "getBalanceInEth", "outputs": [{"name": "value", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "name": "sendCoin", "outputs": [{"name": "sufficient", "type": "bool"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"name": "addr", "type": "address"}], "name": "getBalance", "outputs": [{"name": "value", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "_from", "type": "address"}, {"indexed": true, "name": "_to", "type": "address"}, {"indexed": false, "name": "_value", "type": "uint256"}], "name": "Transfer", "type": "event"}], "devdoc": {"author": "Author Here", "methods": {"getBalance(address)": {"return": "{ \"value\" : \"Token balance of account\" }"}, "getBalanceInEth(address)": {"details": "Uses the `ConvertLib.sol` library for conversions", "return": "{ \"value\" : \"Ether equivalent balance of account\" }"}, "sendCoin(address,uint256)": {"details": "This is just a simple example of a coin-like contract. It is not standards compatible and cannot be expected to talk to other coin/token contracts. If you want to create a standards-compliant token, see: [ConsenSys/Tokens](https://github.com/ConsenSys/Tokens). Cheers!", "return": "{ \"sufficient\": \"Transfer is succesful\" }"}}, "title": "MetaCoin Interface"}, "userdoc": {"methods": {"getBalance(address)": {"notice": "Returns MetaCoin balance for a given address"}, "getBalanceInEth(address)": {"notice": "Returns equivalent Ether balance for a given address"}, "sendCoin(address,uint256)": {"notice": "Transfer coins from sender to receiver"}}}, "sources": {"contracts/ConvertLib.sol": {"keccak256": "0xf583c580ac981029f63ec3e39bd97b6955eb91241d6f066897268c12e3412b98", "urls": ["bzzr://d9a33154f48e2d75ec875dcaeff392fce12866a45855d04a3e4d0aaa7af9fe5b"]}, "contracts/MetaCoin.sol": {"keccak256": "0x2818d1d7dd6e6ec42772900c773786e294807d3ef404ef776e8311914179dd18", "urls": ["bzzr://a3a38f3d98c8545b322d2a753c30de89ae82b377873d65149ec956883b13b643"]}}, "libraries": {}}, "deployment_information": {"address": "0x314159265dd8dbb310642f98f50c066173c1259b", "networkID": 1, "chainID": 1}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}, "descriptor": {"version": "1.0"}}