[{"contract": {"descriptor": {"name": "MetaCoin", "author": "Author Here", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [{"name": "addr", "type": "address"}], "name": "getBalanceInEth", "outputs": [{"name": "value", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"name": "receiver", "type": "address"}, {"name": "amount", "type": "uint256"}], "name": "sendCoin", "outputs": [{"name": "sufficient", "type": "bool"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"name": "addr", "type": "address"}], "name": "getBalance", "outputs": [{"name": "value", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "_from", "type": "address"}, {"indexed": true, "name": "_to", "type": "address"}, {"indexed": false, "name": "_value", "type": "uint256"}], "name": "Transfer", "type": "event"}], "userdoc": {"methods": {"getBalance(address)": {"notice": "Returns MetaCoin balance for a given address"}, "getBalanceInEth(address)": {"notice": "Returns equivalent Ether balance for a given address"}, "sendCoin(address,uint256)": {"notice": "Transfer coins from sender to receiver"}}}}, "endpoint": {"address": "0x0000000000000000000000000000000000000000", "networkID": 1, "chainID": 1}, "dev": {"devdoc": {"author": "Author Here", "methods": {"getBalance(address)": {"return": "{ \"value\" : \"Token balance of account\" }"}, "getBalanceInEth(address)": {"details": "Uses the `ConvertLib.sol` library for conversions", "return": "{ \"value\" : \"Ether equivalent balance of account\" }"}, "sendCoin(address,uint256)": {"details": "This is just a simple example of a coin-like contract. It is not standards compatible and cannot be expected to talk to other coin/token contracts. If you want to create a standards-compliant token, see: [ConsenSys/Tokens](https://github.com/ConsenSys/Tokens). Cheers!", "return": "{ \"sufficient\": \"Transfer is succesful\" }"}}, "title": "MetaCoin Interface"}, "sources": {"keccak256": "0xf583c580ac981029f63ec3e39bd97b6955eb91241d6f066897268c12e3412b98", "swarm_URL": "bzzr://d9a33154f48e2d75ec875dcaeff392fce12866a45855d04a3e4d0aaa7af9fe5b"}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}, {"contract": {"descriptor": {"name": "Set", "author": "", "language": "Solidity", "contract_type": "library", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [{"name": "self", "type": "Set.Data storage"}, {"name": "value", "type": "uint256"}], "name": "remove", "outputs": [{"name": "", "type": "bool"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [{"name": "self", "type": "Set.Data storage"}, {"name": "value", "type": "uint256"}], "name": "contains", "outputs": [{"name": "", "type": "bool"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"name": "self", "type": "Set.Data storage"}, {"name": "value", "type": "uint256"}], "name": "insert", "outputs": [{"name": "", "type": "bool"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}], "userdoc": {"methods": {}}}, "endpoint": {}, "dev": {"devdoc": {"methods": {}}, "sources": {"keccak256": "0xef39e446d16b4f599454fe120cd7345d3c8819c25da421de60e20d9c3efefb11", "swarm_URL": "bzzr://71aa9deb4400e7201428d0715cbc343b778a14f7c50e6272ee4bd1d15a007fa4"}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}, {"contract": {"descriptor": {"name": "SafeMath", "author": "", "language": "Solidity", "contract_type": "library", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [], "userdoc": {"methods": {}}}, "endpoint": {"address": "0x0000000000000000000000000000000000000000", "networkID": 1, "chainID": 1}, "dev": {"devdoc": {"methods": {}, "title": "SafeMath"}, "sources": {"keccak256": "0x6f859ac66b474844c08916cd628b116978fb0f211489a5f45b1fb4a2f7db56b1", "swarm_URL": "bzzr://761ddde6ebe029775b131a31d4f9d4f1c80f4bae7f13b27421d46fcbc036c662"}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}, {"contract": {"descriptor": {"name": "Claimable", "author": "", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [], "name": "claimOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [], "name": "renounceOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "owner", "outputs": [{"name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": true, "inputs": [], "name": "pendingOwner", "outputs": [{"name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "previousOwner", "type": "address"}], "name": "OwnershipRenounced", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "previousOwner", "type": "address"}, {"indexed": true, "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}], "userdoc": {"methods": {}}}, "endpoint": {}, "dev": {"devdoc": {"methods": {"claimOwnership()": {"details": "Allows the pendingOwner address to finalize the transfer."}, "renounceOwnership()": {"details": "Allows the current owner to relinquish control of the contract."}, "transferOwnership(address)": {"details": "Allows the current owner to set the pendingOwner address."}}, "title": "Claimable"}, "sources": {"keccak256": "0xbee545b3c31874580e790f0cb74865fd2bb28086d08d17c7f50857eddf072c77", "swarm_URL": "bzzr://98f1c4b8de8be45b42d29c1f35bcb89fbe8116ae6f269f488e6c4e5ce9f24d1c"}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}, {"contract": {"descriptor": {"name": "Destructible", "author": "", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [], "name": "renounceOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [], "name": "destroy", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "owner", "outputs": [{"name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"name": "_newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [{"name": "_recipient", "type": "address"}], "name": "destroyAndSend", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "payable": true, "stateMutability": "payable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "previousOwner", "type": "address"}], "name": "OwnershipRenounced", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "previousOwner", "type": "address"}, {"indexed": true, "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}], "userdoc": {"methods": {}}}, "endpoint": {}, "dev": {"devdoc": {"methods": {"destroy()": {"details": "Transfers the current balance to the owner and terminates the contract."}, "renounceOwnership()": {"details": "Allows the current owner to relinquish control of the contract."}, "transferOwnership(address)": {"details": "Allows the current owner to transfer control of the contract to a newOwner."}}, "title": "Destructible"}, "sources": {"keccak256": "0x8993ad0305609605827d7b95764edcc60147ae44d467370cfb43499916b052a3", "swarm_URL": "bzzr://a37b8d8085a4016a9c761cad19e01050595ec8454d1989141a11e7a49f440c56"}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}, {"contract": {"descriptor": {"name": "ConvertLib", "author": "Joe Bloggs", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [{"name": "amount", "type": "uint256"}, {"name": "conversionRate", "type": "uint256"}], "name": "convert", "outputs": [{"name": "convertedAmount", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}], "userdoc": {"methods": {"convert(uint256,uint256)": {"notice": "Converts given value to Ether value"}}}}, "endpoint": {}, "dev": {"devdoc": {"author": "Joe Bloggs", "methods": {"convert(uint256,uint256)": {"return": "{ \"convertedAmount\" : \"Ether equivalent amount\" }"}}, "title": "Convert-o-matic 2000"}, "sources": {"keccak256": "0xf583c580ac981029f63ec3e39bd97b6955eb91241d6f066897268c12e3412b98", "swarm_URL": "bzzr://d9a33154f48e2d75ec875dcaeff392fce12866a45855d04a3e4d0aaa7af9fe5b"}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}, {"contract": {"descriptor": {"name": "Pausable", "author": "", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [], "name": "unpause", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "paused", "outputs": [{"name": "", "type": "bool"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [], "name": "renounceOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": false, "inputs": [], "name": "pause", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "owner", "outputs": [{"name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"name": "_newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"anonymous": false, "inputs": [], "name": "Pause", "type": "event"}, {"anonymous": false, "inputs": [], "name": "Unpause", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "previousOwner", "type": "address"}], "name": "OwnershipRenounced", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "previousOwner", "type": "address"}, {"indexed": true, "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}], "userdoc": {"methods": {}}}, "endpoint": {}, "dev": {"devdoc": {"methods": {"pause()": {"details": "called by the owner to pause, triggers stopped state"}, "renounceOwnership()": {"details": "Allows the current owner to relinquish control of the contract."}, "transferOwnership(address)": {"details": "Allows the current owner to transfer control of the contract to a newOwner."}, "unpause()": {"details": "called by the owner to unpause, returns to normal state"}}, "title": "Pausable"}, "sources": {"keccak256": "0x2c92ef64d25ddba75a96b518ab3ad5211c4edab898ac2a693c300274ccd0c675", "swarm_URL": "bzzr://04335d6d25fbf30171a9ce1d458a570e58af99bf356aaeccc5ff1de1a93ae1b6"}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}, {"contract": {"descriptor": {"name": "MyLib", "author": "Gav Wouldn't", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [{"name": "amount", "type": "uint256"}, {"name": "conversionRate", "type": "uint256"}], "name": "convert", "outputs": [{"name": "convertedAmount", "type": "uint256"}], "payable": false, "stateMutability": "nonpayable", "type": "function"}], "userdoc": {"methods": {"convert(uint256,uint256)": {"notice": "Converts given value to Ether value"}}}}, "endpoint": {}, "dev": {"devdoc": {"author": "Gav Wouldn't", "methods": {"convert(uint256,uint256)": {"return": "{ \"convertedAmount\" : \"Ether equivalent amount\" }"}}, "title": "Some Other Library"}, "sources": {"keccak256": "0xbe468f4d111cd6cb5690a89fbc45b6716f809a26e0b96c305d734ec91516ff6a", "swarm_URL": "bzzr://aa8420283df9f1626eb1cc26f03f0a262ac890a51fbb673e4642adb60c47b8b5"}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}, {"contract": {"descriptor": {"name": "Ownable", "author": "", "language": "Solidity", "contract_type": "generic_contract", "contract_version": "1.0", "descriptor_version": "1.0", "abi": [{"constant": false, "inputs": [], "name": "renounceOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"constant": true, "inputs": [], "name": "owner", "outputs": [{"name": "", "type": "address"}], "payable": false, "stateMutability": "view", "type": "function"}, {"constant": false, "inputs": [{"name": "_newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "previousOwner", "type": "address"}], "name": "OwnershipRenounced", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "name": "previousOwner", "type": "address"}, {"indexed": true, "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}], "userdoc": {"methods": {}}}, "endpoint": {}, "dev": {"devdoc": {"methods": {"renounceOwnership()": {"details": "Allows the current owner to relinquish control of the contract."}, "transferOwnership(address)": {"details": "Allows the current owner to transfer control of the contract to a newOwner."}}, "title": "Ownable"}, "sources": {"keccak256": "0x2c92ef64d25ddba75a96b518ab3ad5211c4edab898ac2a693c300274ccd0c675", "swarm_URL": "bzzr://04335d6d25fbf30171a9ce1d458a570e58af99bf356aaeccc5ff1de1a93ae1b6"}, "libraries": {}, "compiler": {"version": "0.4.24+commit.e67f0147", "evmVersion": "byzantium"}}}}]